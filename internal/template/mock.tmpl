{{$s := .Substitutions -}}
package {{.Package.Name}}

import (	
	"github.com/stretchr/testify/mock"
{{- range .Package.Imports}}
	{{if .Alias}}{{.Alias}} {{end}}"{{.Path}}"{{end}}
)

{{range $interface := .Package.Interfaces}}
{{- $k := printf "%sReceiver" .Name}}
{{- $receiver := index $s $k}}
{{- $receiver := or $receiver "m"}}
{{- $k := printf "%sComment" .Name}}
{{- $comment := index $s $k -}}
// {{if $comment}}{{$comment}}{{else}}{{.Name}} is a mock.{{end}}
type {{.Name}} struct { mock.Mock }

{{range .Methods -}}
// {{.Name}} is a mocked method on {{$interface.Name}}.
func ({{$receiver}} *{{$interface.Name}}) {{.Name}}(
	{{- range $index, $p := .Parameters}}{{if $index}}, {{end}}{{$p.Name}} {{$p.Type}}{{end -}}
) (
	{{- range $index, $r := .Results}}{{if $index}}, {{end}}{{$r.Type}}{{end -}}
) {
	{{if .Results}}args := {{end}}{{$receiver}}.Called(
		{{- range $index, $p := .Parameters}}{{if $index}}, {{end}}{{$p.Name}}{{end -}}
	)
{{- if .Results}}
	return {{range $index, $r := .Results}}
		{{- if $index}}, {{end}}
		{{- if eq $r.Type "bool"}}args.Bool({{$index}})
		{{- else if eq $r.Type "error"}}args.Error({{$index}})
		{{- else if eq $r.Type "int"}}args.Int({{$index}})
		{{- else if eq $r.Type "string"}}args.Int({{$index}})
		{{- else}}args.Get({{$index}}).({{$r.Type}}){{end}}
	{{- end}}
{{- end}}
}

{{end}}
{{- end}}